<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>THM-Careers in Cyber(网络安全职业介绍)-学习</title>
    <url>/2024/01/16/THM-Careers%20in%20Cyber(%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E8%81%8C%E4%B8%9A%E4%BB%8B%E7%BB%8D)-%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>本文相关的TryHackMe实验房间链接：<a class="link"   href="https://tryhackme.com/room/careersincyber" >https://tryhackme.com/room/careersincyber <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>本文介绍：了解网络安全领域的不同职业。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>网络安全行业有许多不同的工作种类，主要分为进攻性安全（对目标进行渗透测试以及产出漏洞报告）和防御性安全（防御、调查网络攻击）。</p>
<p>本文将通过提供有关各种网络安全角色的基础信息介绍来帮助你了解网络安全领域的职业情况；在本文的内容中还会给出一些相关的链接，这些链接将指向Tryhackme平台上的不同学习路径，你可以使用这些路径进行学习从而培养你的网络安全技能（这里指的是基础级别的技能）。</p>
<h2 id="安全分析师-Security-Analyst"><a href="#安全分析师-Security-Analyst" class="headerlink" title="安全分析师(Security Analyst)"></a>安全分析师(Security Analyst)</h2><p>此职业主要负责维护组织的数据安全性。安全分析师是跨组织构建安全措施以保护公司免受攻击不可或缺的一部分，分析师将探索和评估公司网络，以发现可操作的数据并建议工程师制定预防措施。 此工作角色需要与各种利益相关者合作，以了解安全要求和安全形势。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/5504f125b74401f8633bccd831e4c785.png"
                      alt="img" style="zoom:50%;" 
                >

<p><strong>职责</strong></p>
<ul>
<li>与各利益相关者合作，分析整个公司的网络安全</li>
<li>编制有关网络安全的持续报告，记录安全问题和建议采取的应对措施</li>
<li>结合对新攻击工具和新攻击趋势的研究：制定安全计划、制定跨团队维护数据安全所需的措施。</li>
</ul>
<p><strong>Tryhackme平台提供的相关学习路径（基础级别技能）</strong></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/presecurity" >https://tryhackme.com/path/outline/presecurity <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/blueteam" >https://tryhackme.com/path/outline/blueteam <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/soclevel1" >https://tryhackme.com/path/outline/soclevel1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/jrpenetrationtester" >https://tryhackme.com/path/outline/jrpenetrationtester <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="安全工程师-Security-Engineer"><a href="#安全工程师-Security-Engineer" class="headerlink" title="安全工程师(Security Engineer)"></a>安全工程师(Security Engineer)</h2><p>此职业主要负责设计、监控和维护安全控制、网络和系统，以帮助防御各种网络攻击。安全工程师基于威胁情报和漏洞信息来开发和实施安全解决方案——威胁情报和漏洞信息通常来自安全团队成员。 安全工程师致力于规避各种攻击，包括 Web 应用程序攻击、网络威胁以及不断发展的新型攻击趋势和策略，最终目标是保持并采用安全措施来降低攻击风险和数据丢失风险。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/037b40529f9a15660ee458245c8c14dc.png"
                      alt="img" style="zoom: 50%;" 
                >

<p><strong>职责</strong></p>
<ul>
<li>跨软件测试和筛选安全措施。</li>
<li>监控网络和报告 以更新系统和缓解漏洞威胁。</li>
<li>确定并实施系统所需的安全解决方案，以获得最佳安全性。</li>
</ul>
<p><strong>Tryhackme平台提供的相关学习路径（基础级别技能）</strong></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/presecurity" >https://tryhackme.com/path/outline/presecurity <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/blueteam" >https://tryhackme.com/path/outline/blueteam <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/jrpenetrationtester" >https://tryhackme.com/path/outline/jrpenetrationtester <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/pentesting" >https://tryhackme.com/path/outline/pentesting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="应急响应人员-Incident-Responder"><a href="#应急响应人员-Incident-Responder" class="headerlink" title="应急响应人员(Incident Responder)"></a>应急响应人员(Incident Responder)</h2><p>此职业主要负责 在攻击者的操作仍在开展时识别并缓解攻击。应急响应人员需要对安全漏洞做出富有成效和高效的响应，工作职责是为组织制定计划、政策和协议，以便在攻击事件发生期间和攻击事件发生后得到执行。这通常是一个压力很大的职位，随着网络攻击的展开，应急响应人员需要实时对攻击进行评估和响应，常用的事件响应指标包括 MTTD、MTTA 和 MTTR等——即平均检测、确认和恢复时间（从网络攻击事件中），应急响应的目的是实现快速有效的响应，保持公司财务状况并避免公司受到负面的违规影响。</p>
<p>简而言之，应急响应人员最终需要保护公司的数据、声誉和财务状况免受网络攻击的影响。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/6a48b0ea257a587d560ffef4b28f4d35.png"
                      alt="img" style="zoom:50%;" 
                >

<p><strong>职责</strong></p>
<ul>
<li>制定并采用全面、可操作的事件响应计划</li>
<li>保持强大的安全最佳实践并支持事件响应措施</li>
<li>完成事件后报告并为未来的攻击做准备，适应攻击事件并从攻击事件中吸取教训</li>
</ul>
<p><strong>Tryhackme平台提供的相关学习路径（基础级别技能）</strong></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/presecurity" >https://tryhackme.com/path/outline/presecurity <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/blueteam" >https://tryhackme.com/path/outline/blueteam <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/soclevel1" >https://tryhackme.com/path/outline/soclevel1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/jrpenetrationtester" >https://tryhackme.com/path/outline/jrpenetrationtester <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="数字取证审查员-Digital-Forensics-Examiner"><a href="#数字取证审查员-Digital-Forensics-Examiner" class="headerlink" title="数字取证审查员(Digital Forensics Examiner)"></a>数字取证审查员(Digital Forensics Examiner)</h2><p>此职业主要负责进行数字取证以调查网络安全事件和网络安全犯罪行为。如果你喜欢扮演侦探，这可能是一个完美的网络安全工作；如果你是执法部门的一员，你将专注于收集和分析证据以帮助破案：指控有罪者并且为无辜者正名；另一方面，如果你的工作属于保护公司网络的范畴，你将使用数字取证技能来分析事件，例如找出网络攻击者违反法律的证据。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/22747e6c2cffce6de0c93f456784be37.png"
                      alt="img" style="zoom:50%;" 
                >

<p><strong>职责</strong></p>
<ul>
<li>在遵守法律程序的同时收集数字证据</li>
<li>分析数字证据以找到与案件相关的答案</li>
<li>记录你的发现并在相关案例中进行报告</li>
</ul>
<p><strong>Tryhackme平台提供的相关学习路径（基础级别技能）</strong></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/blueteam" >https://tryhackme.com/path/outline/blueteam <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/soclevel1" >https://tryhackme.com/path/outline/soclevel1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="恶意软件分析师-Malware-Analyst"><a href="#恶意软件分析师-Malware-Analyst" class="headerlink" title="恶意软件分析师(Malware Analyst)"></a>恶意软件分析师(Malware Analyst)</h2><p>此职业主要负责分析所有类型的恶意软件以更多地了解它们的工作原理和作用。恶意软件分析师的工作包括分析可疑程序、发现软件的恶意行为并编写有关报告。 恶意软件分析师有时也被称为<em><strong>逆向工程师</strong></em>，因为他们的核心任务围绕着 将已经编译的程序从机器语言转换为可读代码，通常是将低级计算机语言转换为高级语言，这项工作要求恶意软件分析师具有强大的编程背景，尤其是要了解汇编语言和 C 语言等。</p>
<p>恶意软件分析师的最终目标是了解恶意程序执行的所有活动，了解如何检测和报告软件的恶意行为。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/49b9585d464f633da235ad1ac6e657d8.png"
                      alt="img" style="zoom:50%;" 
                >

<p><strong>职责</strong></p>
<ul>
<li>对恶意程序进行静态分析，这需要进行逆向工程。</li>
<li>通过观察受控环境中的活动对恶意软件样本进行动态分析。</li>
<li>记录并报告所有发现。</li>
</ul>
<p><strong>Tryhackme平台提供的相关学习路径（基础级别技能）</strong></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/blueteam" >https://tryhackme.com/path/outline/blueteam <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/soclevel1" >https://tryhackme.com/path/outline/soclevel1 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="渗透测试人员-Penetration-Tester"><a href="#渗透测试人员-Penetration-Tester" class="headerlink" title="渗透测试人员(Penetration Tester)"></a>渗透测试人员(Penetration Tester)</h2><p>此职业主要负责测试技术产品的安全漏洞。渗透测试人员也被称为道德黑客，渗透测试人员的工作职责是测试公司内部系统和软件的安全性——通过尝试系统化的黑客攻击行为来发现安全缺陷和安全漏洞。 渗透测试人员利用所发现的漏洞来评估每个实例的风险，然后，公司可以利用相关的漏洞报告来纠正安全问题，以防止现实世界中的网络攻击。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/1b9ac0842dca3efabbc15387fc4f0261.png"
                      alt="img" style="zoom:50%;" 
                >

<p><strong>职责</strong></p>
<ul>
<li>对计算机系统、网络和基于 Web 的应用程序进行测试。</li>
<li>执行安全评估、安全审计和安全分析策略。</li>
<li>完成评估并进行报告，推荐攻击预防措施。</li>
</ul>
<p><strong>Tryhackme平台提供的相关学习路径（基础级别技能）</strong></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/presecurity" >https://tryhackme.com/path/outline/presecurity <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/jrpenetrationtester" >https://tryhackme.com/path/outline/jrpenetrationtester <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/pentesting" >https://tryhackme.com/path/outline/pentesting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="红队人员-Red-Teamer"><a href="#红队人员-Red-Teamer" class="headerlink" title="红队人员(Red Teamer)"></a>红队人员(Red Teamer)</h2><p>此职业主要负责在攻防中扮演对抗者的角色，攻击目标组织并从敌人的角度提供网络安全反馈。红队与渗透测试员有相似之处，但是红队是一个具有更有针对性的工作角色。渗透测试人员往往希望发现系统中的许多漏洞，以保持网络防御的良好状态；而红队则负责测试公司的攻击检测和响应能力，红队人员需要模仿网络罪犯的行为、模拟恶意攻击、保留访问权限(留后门)并避免被发现。红队评估行动往往可以运行一个月之久，这通常是由公司外部的团队来进行的，这些外部团队往往会对拥有成熟安全程序的组织开展红队评估。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/4fa8afd51656c084df33a42566709610.png"
                      alt="img" style="zoom:50%;" 
                >

<p><strong>职责</strong></p>
<ul>
<li><p>模拟威胁行为者的角色，发现可利用的漏洞、维持访问权限（留后门）并避免被发现。</p>
</li>
<li><p>评估目标组织的安全控制、威胁情报和事件响应程序。</p>
</li>
<li><p>完成评估并进行报告，为公司提供可操作的数据以避免真实世界的攻击实例。</p>
</li>
</ul>
<p><strong>Tryhackme平台提供的相关学习路径（基础级别技能）</strong></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/jrpenetrationtester" >https://tryhackme.com/path/outline/jrpenetrationtester <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/pentesting" >https://tryhackme.com/path/outline/pentesting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p><a class="link"   href="https://tryhackme.com/path/outline/redteaming" >https://tryhackme.com/path/outline/redteaming <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
      <tags>
        <tag>TryHackMe</tag>
        <tag>网络安全基础</tag>
      </tags>
  </entry>
  <entry>
    <title>THM-Intro to Defensive Security(防御性安全介绍)-学习</title>
    <url>/2024/01/16/THM-Intro%20to%20Defensive%20Security(%E9%98%B2%E5%BE%A1%E6%80%A7%E5%AE%89%E5%85%A8%E4%BB%8B%E7%BB%8D)-%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>本文相关的TryHackMe实验房间链接：<a class="link"   href="https://tryhackme.com/room/defensivesecurityhq" >https://tryhackme.com/room/defensivesecurityhq <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>本文相关内容：介绍防御性安全和相关主题，例如威胁情报、SOC、DFIR 和 SIEM。</p>
<h2 id="防御性安全简介"><a href="#防御性安全简介" class="headerlink" title="防御性安全简介"></a>防御性安全简介</h2><p>进攻性安全专注于一件事：闯入系统。 进攻性安全领域的职业人员可以通过利用现有错误、滥用不安全的设置以及利用未强制执行的访问控制策略等方式侵入目标系统。 红队和渗透测试人员专注于进攻性安全。</p>
<p>防御性安全在某种程度上与进攻性安全相反，它涉及两个主要任务：</p>
<ul>
<li>防止入侵发生</li>
<li>在入侵发生时检测入侵并做出正确响应</li>
</ul>
<p>蓝队是防御性安全领域的一部分。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/2857591-20230416232248643-1808428703.png"
                      alt="image"
                ></p>
<p>一些与防御性安全相关的任务：</p>
<ul>
<li><p>培养用户网络安全意识：对用户进行网络安全培训有助于防止针对系统的各种攻击。</p>
</li>
<li><p>记录和管理资产：我们需要知道我们必须妥善管理和保护的系统和设备的类型。</p>
</li>
<li><p>更新和修补系统：确保计算机、服务器和网络设备针对任何已知漏洞（弱点）进行正确的版本更新和补丁修补。</p>
</li>
<li><p>设置预防性安全设备：防火墙和入侵防御系统 (IPS) 是预防性安全的重要组成部分。 防火墙可以控制哪些网络流量可以进入系统或网络，以及哪些流量可以离开系统或网络。 IPS 会阻止任何符合当前规则和攻击特征的网络流量。</p>
</li>
<li><p>设置日志记录和监控设备：如果没有进行适当的网络日志记录和网络监控，就不可能检测到恶意活动和入侵行为。 如果我们管理的网络中出现了新的未经授权的可疑设备，我们应该能够及时知道。</p>
</li>
</ul>
<p>防御性安全还有很多要求，上面的列表只涵盖了几个常见的安全任务。</p>
<p>以下是防御性安全的常见相关主题</p>
<ul>
<li>安全运营中心 (SOC)</li>
<li>威胁情报</li>
<li>数字取证和事件响应 (DFIR)</li>
<li>恶意软件分析</li>
</ul>
<p><strong>答题</strong></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319104624034.png"
                      alt="image-20230319104624034"
                ></p>
<h2 id="防御性安全相关领域介绍"><a href="#防御性安全相关领域介绍" class="headerlink" title="防御性安全相关领域介绍"></a>防御性安全相关领域介绍</h2><p>在本小节中，我们将涵盖与防御性安全相关的两个主要主题：</p>
<ul>
<li>安全运营中心 (SOC)，涵盖了威胁情报处理。</li>
<li>数字取证和事件响应 (DFIR)，涵盖了恶意软件分析。</li>
</ul>
<h3 id="安全运营中心-SOC"><a href="#安全运营中心-SOC" class="headerlink" title="安全运营中心(SOC)"></a>安全运营中心(SOC)</h3><p>安全运营中心(SOC-Security Operations Center) 是一个由网络安全专业人员所组成的团队，主要负责监控网络及其系统以检测恶意网络安全事件。</p>
<p>SOC 的一些主要兴趣领域是：</p>
<ul>
<li><p>漏洞：每当发现系统漏洞（弱点）时，必须通过安装适当的更新包或者补丁来修复漏洞，当修复方案不可用时，则应采取必要的措施来防止攻击者利用漏洞。 尽管修复漏洞对 SOC 至关重要，但这项任务实际上不一定会分配给他们来完成。</p>
</li>
<li><p>策略违规：我们可以将安全策略视为保护网络和系统所需的一组规则；例如，如果用户将公司机密数据上传到公开的在线存储服务，则可能违反了安全策略。</p>
</li>
<li><p>未经授权的活动：如果用户的登录名和密码被盗取，那么攻击者就可以使用盗取到的凭据进行登录行为；SOC 需要检测此类事件 并在攻击者造成进一步损坏之前尽快进行阻止。</p>
</li>
<li><p>网络入侵：无论你的安全性有多好，攻击者进行入侵的机会总是存在。当用户单击恶意链接或攻击者利用公共服务器时，也可能会发生网络入侵事件；不管怎样，当网络入侵发生时，我们就必须尽快检测到它，以防止进一步的破坏。</p>
</li>
</ul>
<p>SOC的安全操作涵盖了各种任务以保护公司网络及系统，其中也包含了威胁情报处理。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/2857591-20230416232324077-921784249.png"
                      alt="image"
                ></p>
<h4 id="威胁情报-Threat-Intelligence"><a href="#威胁情报-Threat-Intelligence" class="headerlink" title="威胁情报(Threat Intelligence)"></a>威胁情报(Threat Intelligence)</h4><p>在网络安全中：情报指的是你收集到的关于实际和潜在敌人的信息，威胁指的是任何可能破坏系统或对系统产生不利影响的行为。</p>
<p>威胁情报旨在收集信息，以帮助公司更好地应对潜在的攻击者，了解威胁情报的目的是实现威胁知情防御；不同的公司会吸引不同类型的网络攻击者，一些攻击者可能会试图从移动运营商处窃取客户数据，另外一些攻击者可能会有兴趣破坏炼油厂的网络以使其停止生产。</p>
<p>典型的网络攻击者包括出于政治原因工作的国家网络军队以及出于财务目的行事的勒索软件组织，基于公司（目标）的性质，我们就可以知道预期的攻击者类型。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/2857591-20230416232336558-1363855465.png"
                      alt="image"
                ></p>
<p>情报需要数据，我们必须收集、处理和分析数据：我们首先需要进行数据收集，具体的数据收集来源分为本地来源（例如网络日志）和公共来源（例如网络论坛）；得到数据之后，我们还需要对数据进行处理，数据处理旨在将数据排列成适合分析的格式；最后是数据分析阶段，此阶段旨在找到有关攻击者及其动机的更多信息，另外，数据分析还旨在创建建议列表和可操作步骤列表。</p>
<p>威胁情报可以让我们了解潜在攻击者的战术、技术和程序，妥善处理威胁情报的好处是：我们可以识别威胁参与者（对手），预测他们的攻击活动，最终能够减轻他们的攻击危害并能及时准备响应策略。</p>
<h3 id="数字取证和事件响应-DFIR"><a href="#数字取证和事件响应-DFIR" class="headerlink" title="数字取证和事件响应(DFIR)"></a>数字取证和事件响应(DFIR)</h3><p>接下来我们将介绍数字取证和事件响应 (DFIR-Digital Forensics and Incident Response)，主要将涵盖以下内容：</p>
<ul>
<li>数字取证</li>
<li>事件响应</li>
<li>恶意软件分析</li>
</ul>
<h4 id="数字取证-Digital-Forensics"><a href="#数字取证-Digital-Forensics" class="headerlink" title="数字取证(Digital Forensics)"></a>数字取证(Digital Forensics)</h4><p>取证是指应用科学技术来调查犯罪情况和确定事实。随着计算机和智能手机等数字系统的使用和普及，为了调查和数字系统相关的犯罪情况，一个新的取证学分支得以诞生：计算机取证——后来逐渐演变为数字取证。</p>
<p>在防御性安全方面，数字取证的重点转移到了分析攻击证据、分析攻击者以及分析其他领域：如知识产权盗窃、网络间谍活动、拥有未经授权的内容等。 </p>
<p>数字取证将侧重于不同的区域，例如：</p>
<ul>
<li><p>文件系统：分析来自于系统存储的数字取证图像（低级副本）可以揭示很多信息，例如分析已安装的程序、已创建的文件、部分被覆盖的文件和已删除的文件等。</p>
</li>
<li><p>系统内存：如果攻击者在内存中运行他们的恶意程序而不将其保存到磁盘中，那么获取系统内存的取证图像（低级副本）是分析恶意程序内容和了解恶意攻击的最佳方式。</p>
</li>
<li><p>系统日志：每台客户端和服务器计算机都维护着不同的日志文件来记录正在发生的事情。因此，日志文件能够提供大量关于系统上发生的事情的信息，即使攻击者试图清除他们的行为痕迹，也可能会留下一些线索。</p>
</li>
<li><p>网络日志：遍历网络中的网络数据包日志将有助于回答是否正在发生攻击、是否已经被攻击以及攻击行为所造成的后果是什么。</p>
</li>
</ul>
<h4 id="事件响应-Incident-Response"><a href="#事件响应-Incident-Response" class="headerlink" title="事件响应(Incident Response)"></a>事件响应(Incident Response)</h4><p>事件，在网络安全中通常是指发生数据泄露或发生网络攻击；但是，在某些情况下，有些事件可能不是那么重要，例如配置错误、入侵企图或违反安全策略的行为。</p>
<p>网络攻击的常见示例包括：攻击者使我们的网络或系统无法访问、攻击者破坏（更改）公共网站和发生数据泄露（攻击者窃取公司数据）等。 那么我们将如何应对网络攻击？事件响应指定了出现网络攻击情况时应遵循的方法，事件响应的目的是在网络攻击事件中减少损坏并在尽可能短的时间内恢复正常。在理想情况下，公司的相关安全部门应该制定一个准备好进行事件响应的计划。</p>
<p>事件响应过程的四个主要阶段是：</p>
<ul>
<li><p>准备阶段：这需要一支训练有素并且已经准备好处理安全事件的团队，在理想情况下，要尽量采取各种安全措施来防止事故发生。</p>
</li>
<li><p>检测和分析阶段：事件响应团队要拥有必要的资源来检测安全事件是否发生；此外，事件响应团队还必须进一步分析任何已经检测到的事件以了解其严重性。</p>
</li>
<li><p>遏制、根除和恢复阶段：一旦检测到事件发生，最重要的是要阻止事件影响其他系统、消除恶意事件并恢复受影响的系统。例如，当我们发现一个系统感染了计算机病毒，我们要及时阻止（遏制）病毒传播到其他系统，清除（根除）病毒程序，并使系统恢复正常工作状态。</p>
</li>
<li><p>事后活动阶段：成功恢复系统工作后，要生成一份相关的报告，分享以及吸取教训，以防止未来发生类似事件。</p>
</li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/2857591-20230416232401249-375105017.png"
                      alt="image"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230421125545564.png"
                      alt="image-20230421125545564"
                ></p>
<h4 id="恶意软件分析-Malware-Analysis"><a href="#恶意软件分析-Malware-Analysis" class="headerlink" title="恶意软件分析(Malware Analysis)"></a>恶意软件分析(Malware Analysis)</h4><p>Malware 代表恶意软件，软件是指可以保存在磁盘上或通过网络发送的程序、文档和文件。 </p>
<p>恶意软件包括多种类型，例如：</p>
<ul>
<li><p>病毒(Virus)是将自身附加到程序中的一段代码（是程序的一部分），它旨在从一台计算机传播到另一台计算机； 此外，一旦病毒感染了计算机，它就会通过更改、覆盖和删除文件来发挥危害作用，最终导致的结果是让计算机运行速度变慢直至计算机无法正常使用。</p>
</li>
<li><p>特洛伊木马(Trojan Horse)是一种程序，它会显示自己具有一个理想的正常功能，但实际上程序中还隐藏了一些恶意功能；例如，受害者可能会从可疑网站下载视频播放器，而这个视频播放器可能实际上是一个木马程序，从而攻击者可以完全控制受害者的系统。</p>
</li>
<li><p>勒索软件(Ransomware)是一种加密用户文件的恶意程序，加密会使文件在不知道加密密码的情况下变为不可读状态；用户只有选择支付“赎金”，攻击者才可能会向用户提供加密密码来对用户文件进行解密。</p>
</li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/2857591-20230416232423140-422842004.png"
                      alt="image"
                ></p>
<p>恶意软件分析旨在使用各种方式了解恶意程序，从而保护网络和系统的安全环境：</p>
<ul>
<li><p>静态分析：在不运行恶意程序的前提下对恶意程序进行检查。通常，这需要扎实的汇编语言知识（处理器的指令集，即计算机的基本指令）。</p>
</li>
<li><p>动态分析：受控环境中运行恶意软件并监控其活动 以进行分析，动态分析可以让你观察恶意软件在运行时的具体行为。</p>
</li>
</ul>
<p><strong>答题</strong></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319125337268.png"
                      alt="image-20230319125337268"
                ></p>
<h2 id="关于防御性安全的简单实例"><a href="#关于防御性安全的简单实例" class="headerlink" title="关于防御性安全的简单实例"></a>关于防御性安全的简单实例</h2><p><strong>模拟场景介绍</strong></p>
<p>作为安全分析师，你接下来将要执行一个典型任务：</p>
<p>你是负责保护银行的安全运营中心 (SOC-Security Operations Center) 的成员，该银行的SOC使用了安全信息和事件管理 (SIEM-Security Information and Event Management) 系统，SIEM 会通过各种来源收集与安全相关的信息和事件，并通过一个系统呈现它们；例如，如果用户多次尝试登录失败或者有来自意外地理位置的登录尝试行为，你将收到相关的消息通知；此外，随着机器学习的出现，SIEM 还会自动检测某些异常行为，例如某个用户在凌晨 3 点登录，而通常情况下用户应该只在工作时间进行登录。</p>
<p>在本小节的实例中，我们将与 SIEM 交互以实时监控网络和系统上的不同事件。有些事件是典型的、无害的，而有些特殊事件可能需要我们进一步干预，我们将在实例中找到被标记为红色的事件，记下相关信息，然后单击相关记录以开始进一步检查。</p>
<p>在对可疑事件的进一步检查中，我们需要尝试了解有关可疑活动或事件的更多信息，可疑事件警告可能是由某个具体事件触发的，这可能会关联到本地用户、本地计算机或远程 IP 地址。在现实世界中，如果要发送和接收邮件，你需要知道一个实际地址；同样，在网络环境中，你需要一个 IP 地址才能通过 Internet 发送和接收数据，IP 地址是允许你通过 Internet 进行通信的逻辑地址。我们需要检查事件警告触发的原因以确认相关的事件是否确实是恶意的，如果确定是恶意事件，我们就需要采取相应的措施，比如向 SOC 中的其他成员进行报告并屏蔽恶意事件相关的 IP 地址。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/2857591-20230416232447698-1553382882.png"
                      alt="image"
                ></p>
<p><strong>答题</strong></p>
<p><em>在本文相关的Tryhackme实验房间页面 部署虚拟实验环境，并完成本小节对应的实例</em></p>
<p>part1：检查 SIEM 仪表面板中的警报消息，从警报中找到可疑 IP 地址(143.110.250.149)，记下它，然后单击警报消息继续。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319133244202.png"
                      alt="image-20230319133244202" style="zoom: 67%;" 
                >

<p>part2：Internet 上有一些网站允许你检查某个 IP 地址的信誉以查看它是否是恶意的或可疑的；让我们对在part1中发现的可疑 IP 地址进行检查。</p>
<p><em>tips：有许多开源数据库，例如 <a class="link"   href="https://www.abuseipdb.com/" >AbuseIPDB <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 和 <a class="link"   href="https://talosintelligence.com/" >Cisco Talos Intelligence <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，你可以在其中对 IP 地址执行信誉和位置检查，大多数安全分析师使用这些工具来帮助他们进行警报调查；你还可以通过报告恶意 IP（例如，在 AbuseIPDB 上）来使 Internet 更安全。</em></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319133328927.png"
                      alt="image-20230319133328927" style="zoom:50%;" 
                >

<p>part3：查看检查结果，现在我们知道 IP 地址143.110.250.149是恶意的，我们需要将其上报给相关的工作人员。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319131240191.png"
                      alt="image-20230319131240191" style="zoom:80%;" 
                >

<p>part4：如果这只是失败的身份验证尝试，我们不必太担心，但是我们还注意到此恶意 IP 地址有成功的登录尝试记录，所以我们有必要将这一事件上报；我们要将此事件上报给负责相关工作的公司人员。（我们将事件上报给 SOC Team Lead——安全运营中心团队负责人）</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319132739037.png"
                      alt="image-20230319132739037" style="zoom: 67%;" 
                >

<p>part5：经过事件上报后，我们已获得阻止恶意 IP 地址(143.110.250.149)访问目标公司的权限，我们可以执行阻止规则，通过防火墙阻止恶意 IP 地址访问目标公司。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319133554203.png"
                      alt="image-20230319133554203" style="zoom: 67%;" 
                >

<p>part6：我们成功完成了这个简单实例，最后我们获取到以下flag内容。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319133708037.png"
                      alt="image-20230319133708037"
                ></p>
<blockquote>
<p>最后获取到的flag内容是：THM{THREAT-BLOCKED} 。</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230318231923119.png"
                      alt="image-20230318231923119"
                ></p>
]]></content>
      <tags>
        <tag>TryHackMe</tag>
        <tag>网络安全基础</tag>
      </tags>
  </entry>
  <entry>
    <title>THM-Intro to Offensive Security(进攻性安全介绍)-学习</title>
    <url>/2024/01/16/THM-Intro%20to%20Offensive%20Security(%E8%BF%9B%E6%94%BB%E6%80%A7%E5%AE%89%E5%85%A8%E4%BB%8B%E7%BB%8D)-%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>本文相关的TryHackMe实验房间链接：<a class="link"   href="https://tryhackme.com/room/careersincyber" >https://tryhackme.com/room/careersincyber <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>本文介绍：对进攻性安全概念进行简单的讲解。</p>
<h2 id="攻击模拟示例"><a href="#攻击模拟示例" class="headerlink" title="攻击模拟示例"></a>攻击模拟示例</h2><p>在本文相关的Tryhackme实验房间页面 部署虚拟实验环境，我们需要完成的操作是：攻击一个名为 FakeBank 的web应用程序（一个虚拟的银行web应用程序）。</p>
<p>我们将使用一个名为“GoBuster”的命令行工具来暴力破解 FakeBank 网站以查找隐藏目录或者页面，GoBuster 将使用一个包含潜在的页面名称或目录名称的字典，并尝试将该字典中的每一条记录和初始目标网站的url进行拼接，然后会逐个访问拼接之后的url，如果某个拼接之后的url所对应的网站页面真实存在，我们就能在GoBuster 的输出中得到对应的有效结果。</p>
<p><strong>步骤1）打开终端</strong></p>
<p>终端，也称为命令行，允许我们在不使用图形用户界面的情况下与计算机交互。</p>
<p><strong>步骤2）查找隐藏的网站页面</strong></p>
<p>大多数公司的网站都会有一个管理门户页面，此页面让公司员工能够访问基本的管理控制功能以进行一些日常操作。对于银行而言，员工可能需要将资金转入或者转出客户账户，如果网站页面不设为私有，那么攻击者就可能会找到显示敏感数据的隐藏页面或者允许访问网站管理控件的隐藏页面。</p>
<p>我们将在终端中键入以下命令，以使用 GoBuster（命令行安全工具）查找 FakeBank 网站上可能隐藏的页面。</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">gobuster -u http://fakebank.com -w wordlist.txt <span class="built_in">dir</span></span><br></pre></td></tr></table></figure></div>

<p>在上面的命令中，<code>-u</code>选项 将指定我们需要进行扫描的目标网站，<code>-w</code>选项 将指定用于进行遍历的字典以帮助我们查找隐藏页面。</p>
<p>GoBuster 会使用字典中的每条记录来扫描目标网站，从而查找目标网站上可能存在的隐藏页面；最终我们在GoBuster的输出结果中 可以看到目标网站上确实存在的隐藏目录（Status: 200表示相关页面确实存在）。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230318222340492.png"
                      alt="image-20230318222340492"
                ></p>
<p><strong>步骤3）攻击目标应用程序</strong></p>
<p>你应该已经找到了一个秘密的银行转账页面，这个页面(&#x2F;bank-transfer)允许你在银行账户之间进行转账。</p>
<p>攻击者可以利用隐藏的银行转账页面从任何银行账户中窃取资金，这对银行来说是一个严重的安全风险；作为一名有道德的黑客，你应该（在获得许可的情况下）从目标公司的应用程序中尝试发现此漏洞，并在黑客利用这个漏洞之前将其报告给银行以便进行及时修复。</p>
<p><strong>答题</strong></p>
<p><em>尝试在虚拟实验环境中对目标进行攻击，从银行账户号2276向你的账户（账户号8881）转账 2000美元。</em></p>
<p>在终端界面输入以下命令：</p>
<div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">gobuster -u http://fakebank.com -w wordlist.txt <span class="built_in">dir</span></span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230318224310889.png"
                      alt="image-20230318224310889"
                ></p>
<p>访问找到的隐藏目录：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230318224411171.png"
                      alt="image-20230318224411171" style="zoom:50%;" 
                >

<p>进行转账操作：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230318224527032.png"
                      alt="image-20230318224527032" style="zoom:50%;" 
                >

<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230318224604085.png"
                      alt="image-20230318224604085" style="zoom:50%;" 
                >

<p>返回初始的银行账户页面–查看最终答案：</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230318224830196.png"
                      alt="image-20230318224830196" style="zoom:50%;" 
                >

<blockquote>
<p>最终显示的答案为：BANK-HACKED</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230318224849820.png"
                      alt="image-20230318224849820"
                ></p>
<h2 id="什么是进攻性安全？"><a href="#什么是进攻性安全？" class="headerlink" title="什么是进攻性安全？"></a>什么是进攻性安全？</h2><p>简而言之，进攻性安全就是尝试闯入目标计算机系统、利用软件本身的错误并找到应用程序中的漏洞以获得对目标的未授权访问的过程。</p>
<p>要打败黑客，你就需要像黑客一样行事，作为合法的网络安全人员，你需要在网络犯罪分子发动攻击之前发现目标系统的漏洞并推荐漏洞补丁。</p>
<p>以下是关于进攻性安全职业角色的简短描述：</p>
<ul>
<li>渗透测试员 - 负责测试技术产品以发现可利用的安全漏洞。</li>
<li>红队 - 扮演对抗者的角色，攻击目标组织并从敌人的角度提供网络安全防护措施反馈。</li>
<li>安全工程师 - 设计、监控和维护安全控制、网络和系统，以帮助防止网络攻击。</li>
</ul>
]]></content>
      <tags>
        <tag>TryHackMe</tag>
        <tag>网络安全基础</tag>
      </tags>
  </entry>
  <entry>
    <title>主题样式Demo</title>
    <url>/2024/01/16/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a class="link"   href="https://hexo.io/" >Hexo <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>! This is your very first post. Check <a class="link"   href="https://hexo.io/docs/" >documentation <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> for more info. If you get any problems when using Hexo, you can find the answer in <a class="link"   href="https://hexo.io/docs/troubleshooting.html" >troubleshooting <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> or you can ask me on <a class="link"   href="https://github.com/hexojs/hexo/issues" >GitHub <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></div>

<p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
]]></content>
  </entry>
  <entry>
    <title>THM-Operating System Security(操作系统安全介绍)-学习</title>
    <url>/2024/01/16/THM-Operating%20System%20Security(%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%AE%89%E5%85%A8%E4%BB%8B%E7%BB%8D)-%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>本文相关的TryHackMe实验房间链接：<a class="link"   href="https://tryhackme.com/room/operatingsystemsecurity" >https://tryhackme.com/room/operatingsystemsecurity <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>本文相关内容：简单介绍操作系统安全，并演示 Linux系统 上的 SSH 身份验证实例。</p>
<h2 id="操作系统安全简介"><a href="#操作系统安全简介" class="headerlink" title="操作系统安全简介"></a>操作系统安全简介</h2><p>每天当你使用智能手机或者笔记本电脑以及其他任何类型的计算机时，你都会直接或间接地与操作系统进行交互；常用的操作系统包括 MS Windows、macOS、iOS、Android、Chrome OS 和 Linux。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/41f5388e5280b8a769158537e4372eae.png"
                      alt="img"
                ></p>
<p>什么是操作系统？ 要定义操作系统，我们首先需要知道一个计算机术语：硬件。</p>
<p>计算机硬件是指所有可以用手触摸到的计算机部件和外围设备。硬件包括屏幕、键盘、打印机、U盘和主板；其中主板包含了许多组件，特别是中央处理器（CPU）和内存芯片（RAM），主板通常会连接存储设备（HDD-机械硬盘 或 SSD-固态硬盘）。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230322012635473.png"
                      alt="image-20230322012635473"
                ></p>
<p>主板是计算机的关键部分，从键盘和鼠标到屏幕和打印机的所有其他硬件都将连接到计算机主板；但是，如果你想在计算机中运行自己喜欢的程序或者应用程序，硬件组件本身是没办法直接被使用的，所以我们需要一个操作系统来控制和“驱动”这些硬件组件。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230322013136875.png"
                      alt="image-20230322013136875"
                ></p>
<p>操作系统 (OS) 是位于硬件与你正在运行的应用程序或者程序之间的层。</p>
<p>你日常使用的示例程序可能包括网络浏览器，例如 Firefox、Safari 和 Chrome，以及消息传递应用程序，例如 Signal、WhatsApp 和 Telegram。所有的程序和应用程序都不能直接在计算机硬件上运行，但是，它们能够运行在操作系统上，操作系统能够允许程序按照特定的规则去访问硬件。</p>
<p>某些操作系统专为在笔记本电脑和个人台式机上运行而设计，例如 MS Windows 11 和 macOS；还有某些操作系统专为智能手机而设计，例如 Android 和 iOS；另外还有用于服务器的操作系统，例如 <a class="link"   href="https://www.microsoft.com/en-us/windows-server/" >MS Windows Server 2022 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>、<a class="link"   href="https://www.ibm.com/products/aix" >IBM AIX <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 和 <a class="link"   href="https://www.oracle.com/solaris" >Oracle Solaris <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>；最后，还有一些在个人计算机上以及在服务器上都能被使用的操作系统，比如Linux。</p>
<p>下图是2022 年 1 月期间收集的数据，这些数据显示了当时 用于浏览互联网的不同操作系统的流行程度。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230322014002536.png"
                      alt="image-20230322014002536"
                ></p>
<p>你的智能手机可能运行在 Android 或 iOS操作系统上，并且其中可能拥有关于你的大量私人数据，包括：</p>
<ol>
<li>与家人和朋友的私人谈话</li>
<li>与家人和朋友的私人照片</li>
<li>你用于个人和工作通信的电子邮件客户端</li>
<li>保存在网络浏览器中密码（甚至保存在笔记中的密码）</li>
<li>电子银行应用程序</li>
</ol>
<p>关于机密和私人数据的清单可能还有更多内容，你应该不会希望你所不信任的人打开你的手机并浏览你的照片、对话和应用程序；因此，你需要保护好自己的手机及其操作系统的安全。</p>
<p>保护私人数据同样适用于 运行了 MS Windows、macOS、Linux 等操作系统的笔记本电脑或计算机，你的计算机中很可能包含了大量信息，例如：</p>
<ol>
<li>与你的工作或大学相关的机密文件</li>
<li>你的私人个人文件，例如你的身份证或护照复印件</li>
<li>你所使用的电子邮件程序，例如 MS Outlook、Mozilla Thunderbird等</li>
<li>你保存在网络浏览器和其他应用程序中的密码</li>
<li>你的数码相机和智能手机中的照片的复印件</li>
</ol>
<p>这些关于私人信息的列表可能会很长，具体内容取决于用户类型。</p>
<p>考虑到所保存的数据的性质，你肯定会希望能够尽量确保个人信息安全，而当我们谈论到信息安全时，我们应该想到要保护好以下几点：</p>
<ul>
<li>机密性(Confidentiality)：你希望确保 机密的和私人的文件、信息仅供指定人员使用。</li>
<li>完整性(Integrity)：任何人都不能篡改存储在你的系统上的文件 或者 篡改你在网络上传输的文件。</li>
<li>可用性(Availability)：你希望你的笔记本电脑或智能手机在你决定使用时能够随时处于可用状态。</li>
</ul>
<p>tips：Confidentiality、Integrity、Availability——即CIA三合一模型。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230322015625614.png"
                      alt="image-20230322015625614"
                ></p>
<p><strong>答题</strong></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230320213504737.png"
                      alt="image-20230320213504737"
                ></p>
<h2 id="关于操作系统安全的常见示例"><a href="#关于操作系统安全的常见示例" class="headerlink" title="关于操作系统安全的常见示例"></a>关于操作系统安全的常见示例</h2><p>正如我们在上一小节中所提到的，操作系统安全将涉及针对以下几个方面的攻击：</p>
<ul>
<li>Confidentiality-机密性</li>
<li>Integrity-完整性</li>
<li>Availability-可用性</li>
</ul>
<p>在本小节，我们将重点关注恶意用户所针对的三个安全缺陷：</p>
<ol>
<li>身份验证中的弱密码</li>
<li>弱文件权限</li>
<li>恶意程序</li>
</ol>
<h3 id="身份验证中的弱密码"><a href="#身份验证中的弱密码" class="headerlink" title="身份验证中的弱密码"></a>身份验证中的弱密码</h3><p>身份验证是验证你身份的行为，无论是本地系统还是远程系统，身份验证可以通过三种主要方式实现：</p>
<ul>
<li>你知道的信息，例如密码或 PIN 码。</li>
<li>你是什么，例如指纹。</li>
<li>你拥有的东西，例如可以接收 SMS(短信服务) 消息的电话号码。</li>
</ul>
<p>由于密码是最常见的身份验证形式，因此它们也是最容易受到攻击的。许多用户倾向于在网站上使用容易猜到的简单密码 或者 在多个网站上使用相同的密码；此外，一些用户是设置密码时 会依赖个人详细信息，例如出生日期和宠物的名字等，他们认为这很容易记忆并且不会被攻击者知道（事实上攻击者已经意识到了：用户在设置密码时，会倾向于依赖个人详细信息）。</p>
<p>2019 年 4 月 21 日 英国国家网络安全中心 (NCSC) 发布了 <a class="link"   href="https://www.ncsc.gov.uk/blog-post/passwords-passwords-everywhere" >100,000 个最常用密码 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>的列表，让我们看看常用的前 20 个密码(Top20)。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">Rank	          Password</span><br><span class="line">1	              123456</span><br><span class="line">2	              123456789</span><br><span class="line">3	              qwerty</span><br><span class="line">4	              password</span><br><span class="line">5	              111111</span><br><span class="line">6	              12345678</span><br><span class="line">7	              abc123</span><br><span class="line">8	              1234567</span><br><span class="line">9	              password1</span><br><span class="line">10	              12345</span><br><span class="line">11	              1234567890</span><br><span class="line">12	              123123</span><br><span class="line">13	              000000</span><br><span class="line">14	              iloveyou</span><br><span class="line">15	              1234</span><br><span class="line">16	              1q2w3e4r5t</span><br><span class="line">17	              qwertyuiop</span><br><span class="line">18	              123</span><br><span class="line">19	              monkey</span><br><span class="line">20	              dragon</span><br></pre></td></tr></table></figure></div>

<p>阅读以上Top20密码列表：我们可以看到 123、1234、12345、…、123456789 和 1234567890 都在列表中，password、iloveyou、monkey、dragon等也是常用的英文，而在英文字典中没有的无含义词包括 qwerty、qwertyuiop 和 1q2w3e4r5t，这些看似复杂的(无含义词)密码 其实也非常容易预测，因为它们是遵循键盘布局进行输入的。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/1510e4bd81418a2937060f9c55dad593.gif"
                      alt="img"
                ></p>
<p>简而言之，如果攻击者可以猜出你的任何在线帐户（例如你的电子邮件或社交媒体帐户）的密码，他们将能够直接访问你的私人数据。 因此，选择复杂的密码，并且在不同的账户下使用不同的密码是至关重要的。</p>
<h3 id="弱文件权限"><a href="#弱文件权限" class="headerlink" title="弱文件权限"></a>弱文件权限</h3><p>适当的安全性决定了最小特权原则。在工作环境中，你希望任何文件都只有那些需要访问它才能完成工作的人 有权进行访问；在个人层面上，假设你计划与家人或朋友一起去旅行，你可能只希望与参加该旅行的人共享与旅行计划相关的所有文件，而不想直接公开让所有人共享此类文件——这就是最小特权原则。简而言之，最小特权原则是指：我们要确定“谁才可以访问什么？”。</p>
<p>弱文件权限会使攻击者很容易针对机密性和完整性进行攻击：攻击者可以攻击机密性，因为弱权限允许他们访问他们不应该访问的文件；攻击者也可以攻击完整性，因为他们能够修改他们不应该进行编辑的文件。</p>
<h3 id="恶意程序"><a href="#恶意程序" class="headerlink" title="恶意程序"></a>恶意程序</h3><p>我们要举的最后一个例子是恶意程序，根据恶意程序的类型，它们可以针对机密性、完整性和可用性进行攻击。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/f0a69acdee2506b2898e34fc231fe94b.png"
                      alt="img" style="zoom:50%;" 
                >

<p>某些类型的恶意程序（例如特洛伊木马）允许攻击者访问你的系统，因此，攻击者将能够读取你的文件甚至修改你的文件。</p>
<p>某些类型的恶意程序会针对可用性进行攻击，例如勒索软件(ransomware)。勒索软件是一种能够加密用户文件的恶意程序，加密能够使文件在不知道加密密码的情况下变得不可读，换句话说，文件在没有进行解密（逆向加密）的情况下会变成乱码。在勒索软件事件中，攻击者往往会为用户提供恢复文件可用性的方法，攻击者会让用户重新获得对其原始文件的访问权限：当用户愿意支付“赎金-ransom”时，攻击者则会向用户提供加密密码以进行解密。</p>
<p><strong>答题</strong></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230320213351214.png"
                      alt="image-20230320213351214"
                ></p>
<h2 id="关于操作系统安全的简单实例"><a href="#关于操作系统安全的简单实例" class="headerlink" title="关于操作系统安全的简单实例"></a>关于操作系统安全的简单实例</h2><p>在典型的网络攻击中，攻击者可能会试图获得对远程目标系统的访问权，我们可以通过诱使目标运行恶意文件或者通过直接获取用户名、密码来完成此类攻击。</p>
<p>在本小节我们将重点关注：通过获取用户名、密码来获得对远程目标系统的访问权。 在发现有效用户名后，我们往往可以尝试“猜测”对应的密码，此外，我们也将进一步尝试将权限提升到系统管理员。</p>
<p>系统管理员账号身份在安卓、苹果、Linux系统上被称为<strong>root</strong>，而在 MS Windows 系统上，管理员账号身份会被称为<strong>administrator</strong>，root 账户和administrator 账户对目标系统都具有完全不受限制的访问权限。</p>
<p>在本小节中，我们将使用Linux系统进行练习，我们将可能使用以下 Linux 命令：</p>
<ul>
<li><code>whoami</code></li>
<li><code>ssh USERNAME@MACHINE_IP</code></li>
<li><code>ls</code></li>
<li><code>cat FILENAME</code></li>
<li><code>history</code></li>
</ul>
<p><strong>模拟场景</strong>：</p>
<p>我们受雇检查某家公司的安全性，当我们查看客户的办公室环境时，我们注意到其中一个桌子上有留有一张便条，上面有两个词：sammie 和 dragon，让我们猜测一下 dragon 是不是 Sammie用户 在目标机器 (MACHINE_IP)上所使用的密码？在 AttackBox 的终端中，我们将尝试通过执行<code>ssh sammie@MACHINE_IP</code>命令来登录到 Sammie 的ssh帐户，远程目标系统会要求你提供 sammie 的密码——我们输入 dragon 进行尝试。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230322173552863.png"
                      alt="image-20230322173552863"
                ></p>
<p>AttackBox 终端上的登录交互如下所示：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">user@AttackBox# </span><span class="language-bash">ssh sammie@MACHINE_IP</span></span><br><span class="line">sammie@MACHINE_IP&#x27;s password: </span><br><span class="line">Welcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-100-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">  System information as of Tue  1 Mar 13:20:32 UTC 2022</span><br><span class="line"></span><br><span class="line">  System load:  0.03              Processes:              216</span><br><span class="line">  Usage of /:   51.8% of 6.53GB   Users logged in:        1</span><br><span class="line">  Memory usage: 17%               IPv4 address for ens33: MACHINE_IP</span><br><span class="line">  Swap usage:   0%</span><br><span class="line"></span><br><span class="line"> * Super-optimized for small spaces - read how we shrank the memory</span><br><span class="line">   footprint of MicroK8s to make it the smallest full K8s around.</span><br><span class="line"></span><br><span class="line">   https://ubuntu.com/blog/microk8s-memory-optimisation</span><br><span class="line"></span><br><span class="line">0 updates can be applied immediately.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Last login: Tue Mar  1 09:46:11 2022 from MACHINE_IP</span><br></pre></td></tr></table></figure></div>

<p>成功通过ssh完成登录后，我们可以使用<code>whoami</code>命令 来验证当前用户身份是否为–sammie；我们可以使用 <code>ls</code>(list 的缩写)命令 来列出当前目录中的文件，此命令将显示出当前目录中的所有文件，但隐藏文件并不会显示；如果要显示任何文本文件的内容，我们可以使用命令 <code>cat FILENAME</code>，cat是concatenate 的缩写，此命令将在终端屏幕上打印出文本文件的内容。</p>
<p>在下面的终端交互中，我们看到了四个命令的使用情况：<code>ssh</code>、<code>whoami</code>、<code>ls</code> 和 <code>cat</code> 。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">user@AttackBox# </span><span class="language-bash">ssh sammie@10.20.30.130</span></span><br><span class="line">sammie@10.20.30.130&#x27;s password: </span><br><span class="line">Welcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-100-generic x86_64)</span><br><span class="line"></span><br><span class="line">[...]</span><br><span class="line"></span><br><span class="line">Last login: Tue Mar  1 14:45:53 2022 from 10.20.30.1</span><br><span class="line">sammie@beginner-os-security:~$ whoami</span><br><span class="line">sammie</span><br><span class="line">sammie@beginner-os-security:~$ ls</span><br><span class="line">country.txt  draft.md  icon.png  password.txt  profile.jpg</span><br><span class="line">sammie@beginner-os-security:~$ cat draft.md </span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Operating System Security</span></span><br><span class="line"></span><br><span class="line">Reusing passwords means that your password for other sites becomes exposed if one service is hacked.</span><br><span class="line">sammie@beginner-os-security:~$</span><br></pre></td></tr></table></figure></div>

<p>接下来，我们将介绍的最后一个命令是 <code>history</code>，此命令将在终端界面打印出用户曾经使用的命令；当你使用<code>history</code>命令之后，也许能在终端输出结果中找到一些敏感信息。</p>
<p>假设我们已经知道了另外两个可以访问目标机器的用户名：</p>
<ul>
<li><em><strong>johnny</strong></em></li>
<li><em><strong>linda</strong></em></li>
</ul>
<p>如果以上两个用户都很少考虑安全性，我们可以使用多种方式来猜测这两个用户的密码，此处我们将列出以下两种情况：</p>
<ul>
<li>如果你未以 sammie用户 或任何其他用户身份完成ssh登录操作，你可以直接使用 <code>ssh johnny@MACHINE_IP</code>命令并手动尝试输入多个密码进行猜测，以查看哪个密码对 johnny用户 有效。</li>
<li>如果你已经以 sammie用户 或任何其他用户身份完成了ssh登录操作，你可以使用 <code>su - johnny</code>命令 来切换用户身份，并手动尝试输入一个又一个密码，以查看哪个密码对 johnny用户 有效。</li>
</ul>
<p><strong>答题</strong></p>
<p><em>在本文相关的Tryhackme实验房间页面 部署虚拟实验环境，并完成本小节对应的实例。</em></p>
<p><em><strong>问题：</strong></em></p>
<ol>
<li>根据本文所介绍的Top 7 常用密码，让我们尝试找出 Johnny 的密码，用户 johnny 的密码是什么？</li>
<li>以 Johnny 身份登录后，使用<code>history</code>命令检查 Johnny 曾经键入过的命令，我们发现Johnny错误地把 root 密码当成命令输入过，root密码的内容是什么？</li>
<li>以 Johnny 身份登录后，使用命令 <code>su - root</code> 切换到 root 帐户(并输入root密码通过身份验证)，查看根目录下的flag.txt的内容，flag.txt的内容是什么？</li>
</ol>
<p><em><strong>操作：</strong></em></p>
<p>我们可以使用以下命令针对目标机器进行ssh登录尝试：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">ssh johnny@10.10.210.242</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">经过登录尝试发现可用密码：abc123</span></span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230322181721434.png"
                      alt="image-20230322181721434"
                ></p>
<blockquote>
<p>用户 johnny 的密码是：abc123</p>
</blockquote>
<p>成功完成ssh登录后，输入<code>history</code>命令：发现root用户的密码。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230322181911146.png"
                      alt="image-20230322181911146"
                ></p>
<blockquote>
<p>root用户的密码为：happyHack!NG 。</p>
</blockquote>
<p>切换用户身份到root（使用我们刚才找到的密码完成身份验证），以root用户身份查找flag.txt文件 并获取其文本内容：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230322182319042.png"
                      alt="image-20230322182319042"
                ></p>
<blockquote>
<p>flag.txt的内容是：THM{YouGotRoot} 。</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230320214350583.png"
                      alt="image-20230320214350583"
                ></p>
]]></content>
      <tags>
        <tag>TryHackMe</tag>
        <tag>网络安全基础</tag>
      </tags>
  </entry>
  <entry>
    <title>THM-Web Application Security(Web应用程序安全介绍)-学习</title>
    <url>/2024/01/16/THM-Web%20Application%20Security(Web%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%AE%89%E5%85%A8%E4%BB%8B%E7%BB%8D)-%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>本文相关的TryHackMe实验房间链接：<a class="link"   href="https://tryhackme.com/room/introwebapplicationsecurity" >https://tryhackme.com/room/introwebapplicationsecurity <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>本文相关内容：了解 Web 应用程序并探索它们的一些常见安全问题</p>
<h2 id="Web应用程序简介"><a href="#Web应用程序简介" class="headerlink" title="Web应用程序简介"></a>Web应用程序简介</h2><p>我们每个人都会在我们的计算机上使用不同的程序。 一般来说，当程序在计算机上运行时，就将使用计算机的处理能力和存储功能，而且，要使用一个程序，我们还需要先安装它。如果我们想不经过安装操作就直接使用程序应该怎么办？</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230421124001893.png"
                      alt="image-20230421124001893"
                ></p>
<p>Web 应用程序类似于普通的“程序”，并且只要我们的计算机上有一个现代的、标准的 Web 浏览器，例如 Firefox、Safari 或 Chrome等，我们就可以不经安装而直接使用Web应用程序——当我们想运行Web应用程序时，我们无需安装 运行时所需的每个程序，只需直接访问相关浏览器页面即可。 </p>
<p>以下是关于 Web 应用程序的一些示例：</p>
<ul>
<li>网络邮件，例如 Tutanota、Protonmail、Outlook 和 Gmail</li>
<li>在线办公套件，如 Microsoft Office 365（Word、Excel 和 PowerPoint）、Google Drive（Docs、Sheets 和 Slides）和 Zoho Office（Writer、Sheet 和 Show）</li>
<li>在线购物网站，例如 Amazon.com、AliExpress 和 Etsy</li>
</ul>
<p>其他示例还包括网上银行、汇款、天气预报和网络社交媒体等，成千上万的Web应用程序提供了数不胜数的在线服务。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230421124018938.png"
                      alt="image-20230421124018938"
                ></p>
<p>Web 应用程序的概念是一个在远程服务器上运行的程序，而服务器是指连续运行以“服务”用户客户端的计算机系统，在这种情况下，服务器将运行特定类型的程序，并且这些程序可以通过Web浏览器被访问。</p>
<p>以一个在线购物 Web 应用程序为例，此 Web 应用程序将从数据库服务器中读取有关产品及其详细信息的数据，数据库将用于 以有组织的方式存储信息，在本例中这些数据可能会包括有关产品、客户和发票的信息。（数据库服务器会负责许多功能，包括对数据库进行读取、搜索和写入等操作） </p>
<p>一个在线购物 Web 应用程序在运行时 可能需要访问多个数据库，例如：</p>
<ul>
<li>产品数据库：该数据库包含有关产品的详细信息，例如名称、图像、规格和价格。</li>
<li>客户数据库：该数据库包含与客户相关的所有详细信息，例如姓名、地址、电子邮件和电话号码。</li>
<li>销售数据库：我们希望在这个数据库中看到每个客户购买了什么以及他们是如何支付的。</li>
</ul>
<p>我们已经大概了解了存储在任何在线购物系统中的信息量，假如攻击者设法利用（破解）Web 应用程序并窃取客户的数据库内容，那么这将给公司及相关客户带来重大损失。</p>
<p>下图显示了在Online购物网站上搜索商品可能将发生什么，在最简单的Online购物网站中，搜索商品可能会经历以下四个步骤：</p>
<ol>
<li><p>用户在搜索字段中输入项目名称或相关关键字，Web 浏览器会将被搜索的关键字发送给在线购物 Web 应用程序。</p>
</li>
<li><p>Web 应用程序查询（搜索）产品数据库以查找用户所提交的关键字。</p>
</li>
<li><p>产品数据库将与用户提供的关键字相匹配的搜索结果返回给 Web 应用程序。</p>
</li>
<li><p>Web 应用程序将结果格式化为友好可读的网页页面并将它们返回给用户以供浏览。</p>
</li>
</ol>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319224615610.png"
                      alt="image-20230319224615610"
                ></p>
<p>从用户的角度来看，他们只会访问到一个隐藏所有技术基础设施的在线商店页面。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319224808863.png"
                      alt="image-20230319224808863" style="zoom: 67%;" 
                >

<p><strong>答题</strong></p>
<blockquote>
<p>Browser - 浏览器</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319213257215.png"
                      alt="image-20230319213257215"
                ></p>
<h2 id="Web-应用程序常见安全风险"><a href="#Web-应用程序常见安全风险" class="headerlink" title="Web 应用程序常见安全风险"></a>Web 应用程序常见安全风险</h2><p>假设你想从网上商店购买商品，你就会希望能够在相关 Web 应用程序上执行某些功能，用户完成一个在线商品订单可能分为以下几个步骤：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319225857754.png"
                      alt="image-20230319225857754"
                ></p>
<p>针对 Web 应用程序的常见攻击有很多，下面简单介绍一些攻击方式：</p>
<ul>
<li><p>在登录网站时：攻击者可以通过进行多次登录尝试来枚举发现有效密码；攻击者能够使用密码字典和一些自动化工具来针对登录页面来进行多次测试。(暴力枚举)</p>
</li>
<li><p>在搜索产品时：攻击者可以通过在搜索字段中添加特定字符和代码来尝试破坏目标系统；攻击者的目的是让目标系统返回它不应该返回的数据或者执行它不应该执行的程序。(注入类攻击)</p>
</li>
<li><p>在提供付款细节时：攻击者会检查 和付款细节相关的数据 是以明文形式发送还是使用了弱加密；加密是指 让数据在不知道密钥或密码的情况下变得不可读。(明文、弱加密)</p>
</li>
</ul>
<p>tips：本小节只介绍一些针对Web应用程序的攻击方式 而并非全部。</p>
<h3 id="身份识别和验证错误"><a href="#身份识别和验证错误" class="headerlink" title="身份识别和验证错误"></a>身份识别和验证错误</h3><p>身份识别(Identification)是指 可以对用户身份进行唯一识别的能力，而身份验证(authentication)是指 可以证明用户实际身份和用户所声称的身份相符合的能力；当用户登录网上商店时，正常情况下：商店必须先识别用户的身份并进行身份验证，然后才能让用户使用该在线购物系统。</p>
<p>如果网站的身份识别和身份验证机制不佳，那么在网站登录界面就可能存在一些漏洞，关于此类漏洞的示例有：</p>
<ul>
<li><p>目标网站允许攻击者使用暴力枚举；攻击者能够尝试多次输入不同密码以进行登录操作——通常攻击者会使用自动化工具来暴力枚举，从而找到有效的登录凭据。</p>
</li>
<li><p>目标网站允许正常用户使用弱密码；弱密码通常很容易被攻击者猜到。</p>
</li>
<li><p>目标网站以明文形式存储用户密码；如果此时攻击者能够设法读取包含密码的文件，那么他们就能够获知存储的密码内容。</p>
</li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319234328832.png"
                      alt="image-20230319234328832"
                ></p>
<h3 id="损坏的访问控制机制"><a href="#损坏的访问控制机制" class="headerlink" title="损坏的访问控制机制"></a>损坏的访问控制机制</h3><p>访问控制(Access control)机制 能够确保每个用户只能访问与其角色或工作相关的文件（文档、图像等）；例如，公司的网站管理员应该不希望市场部的某人能够直接访问（阅读）财务部的文档。</p>
<p>与访问控制相关的示例漏洞包括：</p>
<ul>
<li><p>网站管理员未能应用最小权限原则并为用户提供超出其需要的访问权限；例如，在线客户应该能够查看商品的价格，但他们不应该能够更改商品价格。</p>
</li>
<li><p>攻击者能够使用用户的唯一标识符查看或修改他人的帐户信息；例如，你应该不希望一个银行客户能够查看另一个客户的交易详情。</p>
</li>
<li><p>攻击者能够以未经身份验证的用户身份 浏览需要身份验证（登录）的页面；例如，我们不应该让任何人在登录之前就能查看到网络邮件内容。</p>
</li>
</ul>
<h3 id="注入攻击"><a href="#注入攻击" class="headerlink" title="注入攻击"></a>注入攻击</h3><p>注入攻击是指 对 Web 应用程序中的注入类漏洞进行利用，在注入类漏洞存在的情况下：攻击者可以插入恶意代码作为用户输入内容的一部分。</p>
<p>注入类漏洞存在的一个原因是 目标网站缺乏对“用户输入”的适当验证和清理。</p>
<h3 id="未成功加密"><a href="#未成功加密" class="headerlink" title="未成功加密"></a>未成功加密</h3><p>此类漏洞的存在是由于发生了与密码学相关的错误，密码学侧重于数据的加密和解密过程，加密是指 对明文内容使用加密算法计算以得到密文；对于没有密钥解密的人来说，经过加密产生的密文是无法读懂的，换句话说，加密能够确保没有人可以在不知道密钥的情况下直接读取数据，只有使用密钥进行解密 才能将密文转换回原始明文。</p>
<p>未成功加密(加密失败)的例子包括：</p>
<ul>
<li>目标网站以明文形式发送敏感数据，例如，网站使用 HTTP 协议而不是 HTTPS 协议； HTTP 是用于访问 Web 的协议，而 HTTPS 是 HTTP 的安全版本，攻击者可以阅读通过 HTTP 协议发送的所有内容，但不能阅读使用 HTTPS 协议发送的内容。</li>
<li>目标网站依赖弱密码算法进行加密（很容易被破解）；有一种古老的密码算法是将每个字母移位一个，例如，将“TRY HACK ME”变成“USZ IBDL NF”，如果使用这种加密算法就很容易被攻击者破解密文。</li>
<li>目标网站使用默认或弱密钥进行加密；破解使用 1234 作为密钥的加密并不困难，所以如果使用弱密钥加密就很容易被攻击者破解。</li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230421124046841.png"
                      alt="image-20230421124046841"
                ></p>
<p><strong>答题</strong></p>
<blockquote>
<p>Identification and Authentication Failure 身份识别和身份验证错误</p>
<p>Cryptographic Failures 未成功加密（加密失败）</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319214337998.png"
                      alt="image-20230319214337998"
                ></p>
<h2 id="Web-应用程序安全实例"><a href="#Web-应用程序安全实例" class="headerlink" title="Web 应用程序安全实例"></a>Web 应用程序安全实例</h2><p>本小节将调查一个存在<u>不安全直接对象引用</u> (IDOR漏洞) 的易受攻击的示例网站。</p>
<p>IDOR漏洞属于损坏的访问控制机制的一种，所谓 损坏的访问控制机制 意味着攻击者可以访问不适合他们访问的信息 或者 执行不适合他们执行的操作。</p>
<p>Web 服务器能够接收用户提供的输入以检索对象（文件、数据、文档），这些被检索的对象可能是按顺序编号的；我们假设当前用户有权访问名为 IMG_1003.JPG 的照片，我们可能会猜测 Web服务器上还存在IMG_1002.JPG照片 和 IMG_1004.JPG照片；然而，即使我们已经知道了图像文件的名称，Web 应用程序也不应该向我们提供某些图像。一般来说，如果Web应用程序对“用户输入”的信任度过高，就可能会出现IDOR漏洞，换句话说，此时 Web 应用程序并没有严格验证用户是否有权访问所请求的对象。</p>
<p>即使知道了某个用户或某个产品相关的正确 URL 也不一定意味着当前用户应该能够访问这些 URL（所以这需要我们进行实际的访问验证）。假设我们已经知道某个产品页面的URL： <a class="link"   href="https://store.tryhackme.thm/products/product?id=52" >https://store.tryhackme.thm/products/product?id=52 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ；我们可以期望此 URL 会提供有关编号为 52 的产品详细信息；如果在数据库中，产品数据项是将按顺序分配编号的，那么攻击者就可以尝试使用其他数字 如 51 或 53来取代URL中的 52；一旦目标 Web 应用程序存在IDOR漏洞，那么攻击者就可能会访问到 其他已停用产品或未发布产品的相关页面。</p>
<p>让我们考虑一个更关键的例子(此例基于目标系统存在IDOR漏洞的前提条件下)，假设有一个URL <a class="link"   href="https://store.tryhackme.thm/customers/user?id=16" >https://store.tryhackme.thm/customers/user?id=16 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> ，这个URL将返回 id&#x3D;16 的用户相关页面；同样，我们希望用户所对应的 ID 号是连续的，那么攻击者就可以尝试在URL中使用其他ID号 并可能成功访问到其他用户帐户所相关的页面（进而能够查看到其他用户的敏感信息）。</p>
<p>IDOR漏洞也适用于访问一些按顺序命名并存储的文件；例如，攻击者在URL中看到007.txt，那么可以尝试使用其他文件名称，如001.txt、006.txt等。(此例基于目标系统存在IDOR漏洞的前提条件下)</p>
<p><strong>答题</strong></p>
<p><em>在本文相关的Tryhackme实验房间页面 部署虚拟实验环境，并完成本小节对应的实例。</em></p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319215632445.png"
                      alt="image-20230319215632445" style="zoom: 67%;" 
                >

<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319220131634.png"
                      alt="image-20230319220131634" style="zoom:67%;" 
                >

<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319220240818.png"
                      alt="image-20230319220240818" style="zoom:67%;" 
                >

<blockquote>
<p>最后得到的flag内容为：THM{IDOR_EXPLORED} 。</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230319215450568.png"
                      alt="image-20230319215450568"
                ></p>
]]></content>
      <tags>
        <tag>TryHackMe</tag>
        <tag>网络安全基础</tag>
      </tags>
  </entry>
  <entry>
    <title>THM-Network Security(网络安全介绍)-学习</title>
    <url>/2024/01/16/THM-Network%20Security(%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E4%BB%8B%E7%BB%8D)-%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>本文相关的TryHackMe实验房间链接：<a class="link"   href="https://tryhackme.com/room/intronetworksecurity" >https://tryhackme.com/room/intronetworksecurity <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>本文相关内容：简单介绍网络安全概念，了解基本的网络攻击步骤，并尝试完成一个侵入目标服务器的实例。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>计算机网络是一组相互连接的计算机和设备，而网络安全则侧重于保护这些设备以及连接它们的链路的安全。（更准确地说，网络安全包括了保护计算机网络及其数据的机密性、完整性和可用性的一切安全设备、安全技术和过程）</p>
<p>网络安全由不同的硬件和软件解决方案组成，以实现既定的安全目标。网络安全的硬件解决方案是指 你在网络中设置的用于保护网络安全的设备，这些设备是硬件，所以你可以在现实中接触到它们。硬件设备可能类似于下图：</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230322195255546.png"
                      alt="image-20230322195255546"
                ></p>
<p>网络安全硬件设备的示例包括：</p>
<ul>
<li>防火墙设备：防火墙将根据一组预定义的规则来允许和阻止连接，它将限制什么可以进入网络 和 什么可以离开网络。</li>
<li>入侵检测系统 (IDS) 设备：IDS 会检测系统入侵、网络入侵以及入侵企图，它会尝试检测攻击者侵入你的网络的企图。</li>
<li>入侵防御系统 (IPS) 设备：IPS 可阻止检测到的入侵行为和入侵企图，它旨在防止攻击者闯入你的网络。</li>
<li>虚拟专用网络 (VPN) 集线器设备：VPN 可确保网络流量无法被第三方读取或更改，它保护发送的数据的机密性（secrecy）和完整性。</li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230322200053263.png"
                      alt="image-20230322200053263"
                ></p>
<p>另一方面，网络安全也有软件解决方案，常见的例子有：</p>
<ul>
<li>防病毒软件：你可以在计算机或者智能手机上安装防病毒软件以检测恶意文件并阻止它们的执行。</li>
<li>主机防火墙：与防火墙设备（硬件设备）不同，主机防火墙是作为操作系统的一部分而被提供的程序，或者是安装在操作系统上的程序。例如，MS Windows 操作系统中就包含了 Windows Defender 防火墙程序，Apple macOS 中也包含了应用防火墙(application firewal)，以上两者都是主机防火墙。</li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230322200919536.png"
                      alt="image-20230322200919536"
                ></p>
<p>根据 IBM Security 发布的<a class="link"   href="https://newsroom.ibm.com/2021-07-28-IBM-Report-Cost-of-a-Data-Breach-Hits-Record-High-During-Pandemic" >《2021 年数据泄露成本报告》 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>，2021 年数据泄露平均每起事件给公司造成 424 万美元的损失，而 2020 年为 386 万美元，平均成本因行业和国家&#x2F;地区而异。 例如，医疗行业数据泄露的平均总成本为 923 万美元，而教育行业则为 379 万美元。</p>
<h3 id="答题"><a href="#答题" class="headerlink" title="答题"></a><strong>答题</strong></h3><blockquote>
<p>Windows Defender 防火墙是什么类型的防火墙：Host Firewall</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230320215249669.png"
                      alt="image-20230320215249669"
                ></p>
<h2 id="网络攻击步骤介绍"><a href="#网络攻击步骤介绍" class="headerlink" title="网络攻击步骤介绍"></a>网络攻击步骤介绍</h2><p>每个“操作”的执行 都需要拥有某种形式的计划才能最终取得成功。假如你对野生动物摄影感兴趣，除非你完全不在乎结果，否则你不能只是拿起相机就直接前往丛林进行摄影，为了安全、成功地进行野生动物摄影之旅，你往往需要更多地去了解你想要用相机拍摄的动物(这包括动物的习性和你要避免的危险)；以上例子同样适用于针对目标网络进行攻击的网络安全行动。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230322201637351.png"
                      alt="image-20230322201637351"
                ></p>
<p>闯入目标网络通常包括多个步骤，根据<a class="link"   href="https://www.lockheedmartin.com/en-us/capabilities/cyber/cyber-kill-chain.html" >洛克希德·马丁公司 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>的说法，网络杀伤链有七个步骤：</p>
<ol>
<li>Recon(侦察)：Recon，是reconnaissance(侦察)的缩写，指的是攻击者将在此阶段 试图尽可能多地了解目标，主要包括——目标的服务器类型、操作系统、IP 地址、用户名和电子邮件地址等信息，获取到这些信息将有利于网络攻击成功。</li>
<li>Weaponization(武器化(：这一步是指准备一个带有恶意组件的文件，例如，相关恶意组件能够为攻击者提供远程访问。</li>
<li>Delivery(投递)：投递是指通过任何可行的方式将“武器化”的文件投递给目标，例如通过电子邮件或者U盘进行投递。</li>
<li>Exploitation(利用)：当用户打开（攻击者所投递的）恶意文件时，用户所使用的系统就会执行恶意组件。</li>
<li>Installation(安装)：经过上一步的恶意组件执行之后，目标系统就会被安装上恶意软件。</li>
<li>Command &amp; Control(命令与控制-C2)：恶意软件的成功安装会为攻击者提供对目标系统的命令和控制能力。</li>
<li>Actions on Objectives(针对目标的行动)：在获得对一个目标系统的控制权后，攻击者就能够达到他们的行动目标，关于行动目标的示例：数据泄露（一旦成功窃取到了目标系统的数据，即代表攻击者达到行动目标）。</li>
</ol>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/image-20230322204848872.png"
                      alt="image-20230322204848872" style="zoom:67%;" 
                >

<p>关于网络攻击步骤的另一个类比是：对目标房屋感兴趣的小偷。小偷在开始行动之前，往往会花一些时间了解目标房屋，谁住在那里，他们什么时候离开以及什么时候回家，小偷还会确定目标房屋是否有安装安全摄像头以及警报系统，一旦收集到足够的信息，小偷就会制定最佳的进入策略。关于物理盗窃的计划和执行在某种程度上也类似于旨在闯入网络并窃取数据的恶意攻击行为。</p>
<img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/articleimg/a8e61f1f9a2ea3612d3bf84f9a11f41c.png"
                      alt="a8e61f1f9a2ea3612d3bf84f9a11f41c" 
                >

<h3 id="答题-1"><a href="#答题-1" class="headerlink" title="答题"></a><strong>答题</strong></h3><blockquote>
<p>攻击者在网络杀伤链的哪一步收集有关目标的信息：Recon (侦察)</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230320215635939.png"
                      alt="image-20230320215635939"
                ></p>
<h2 id="网络安全实例"><a href="#网络安全实例" class="headerlink" title="网络安全实例"></a>网络安全实例</h2><p>在本小节的实例中，我们将尝试侵入目标 Linux 系统。</p>
<p>我们攻击的第一步是侦察；我们可以使用不同的工具来加快我们的侦察活动，这些工具将收集与目标相关的各个方面的信息。</p>
<p>为了简单起见，我们将在此使用Nmap工具，Nmap是 Network Mapper 的缩写，它是一个网络扫描器，可以帮助我们发现正在运行的机器（存活主机）以及在这些机器上运行的任何对外界可见的程序（计算机服务）。我们可以通过在终端提示符下运行 <code>nmap MACHINE_IP</code>命令来扫描目标IP：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">tips：在实际执行命令时，我们直接用目标ip地址代替下面命令中的MACHINE_IP。</span></span><br><span class="line"><span class="meta prompt_">root@AttackBox# </span><span class="language-bash">nmap MACHINE_IP</span></span><br><span class="line">Starting Nmap 7.92 ( https://nmap.org ) at 2022-04-06 17:38 EEST</span><br><span class="line">Nmap scan report for MACHINE_IP</span><br><span class="line">Host is up (0.00024s latency).</span><br><span class="line">Not shown: 997 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">21/tcp open  ftp</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br><span class="line"></span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 0.33 seconds</span><br></pre></td></tr></table></figure></div>

<p>我们发现了三个服务正在运行：</p>
<ol>
<li>FTP 服务器：FTP 代表文件传输协议，用于在机器之间传输文件。</li>
<li>SSH 服务器：SSH 代表 Secure Shell，用于安全远程登录，换句话说，它允许你在远程系统上安全地执行命令。</li>
<li>HTTP 服务器：HTTP 代表超文本传输协议，用于web服务，每当你在网站上浏览网页时，你都在使用 HTTP协议 或 HTTPS协议，HTTPS 是 HTTP 的安全（加密）版本。</li>
</ol>
<p>你还可以注意到 Nmap 会根据主机是否收到任何响应来报告主机是否已启动（存活），这有助于我们知道什么时候目标机器将显示没有端口打开或者显示没有端口可访问。</p>
<p>让我们尝试收集有关 FTP 服务器的更多信息：</p>
<ol>
<li>我们将在 AttackBox 的终端中输入 <code>ftp MACHINE_IP</code> 命令来连接到目标的 FTP 服务器。</li>
<li>接下来我们尝试使用login anonymous登录，看看这个FTP服务器是否支持匿名登录。</li>
<li>成功完成匿名登录之后，我们可以尝试使用命令 ls（list的缩写）来查看可用的文件，我们能得到文件名列表及文件的详细信息。</li>
<li>如果你对所发现的任何文件感到好奇，可以使用 <code>get filename</code> 命令来进行下载，比如我想知道 secret.txt 文件包含什么，所以使用 <code>get secret.txt</code> 命令来进行文件下载。</li>
<li>成功下载文件之后，键入 <code>exit</code> 或 <code>bye</code> 即可退出 FTP 客户端。</li>
</ol>
<p>与目标FTP服务器的交互过程将如下所示：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">root@AttackBox# </span><span class="language-bash">ftp MACHINE_IP</span></span><br><span class="line">Connected to MACHINE_IP (MACHINE_IP).</span><br><span class="line">220 (vsFTPd 3.0.3)</span><br><span class="line">Name (MACHINE_IP:root): anonymous</span><br><span class="line">230 Login successful.</span><br><span class="line">Remote system type is UNIX.</span><br><span class="line">Using binary mode to transfer files.</span><br><span class="line"><span class="meta prompt_">ftp&gt; </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line">227 Entering Passive Mode (10,20,30,130,181,190).</span><br><span class="line">150 Here comes the directory listing.</span><br><span class="line">-rw-r--r--    1 ftp      ftp        425351 Apr 06 11:22 2680-0.txt</span><br><span class="line">-rw-r--r--    1 ftp      ftp           356 Apr 06 11:22 2680.epub</span><br><span class="line">-rw-r--r--    1 ftp      ftp        251857 Apr 06 11:22 55317-0.txt</span><br><span class="line">-rw-r--r--    1 ftp      ftp           358 Apr 06 11:22 55317.epub</span><br><span class="line">-rwxr-xr-x    1 ftp      ftp           214 Apr 06 11:22 backup.sh</span><br><span class="line">-rw-r--r--    1 ftp      ftp            23 Apr 06 11:22 secret.txt</span><br><span class="line">226 Directory send OK.</span><br><span class="line"><span class="meta prompt_">ftp&gt; </span><span class="language-bash">get secret.txt</span> </span><br><span class="line">local: secret.txt remote: secret.txt</span><br><span class="line">227 Entering Passive Mode (10,20,30,130,159,46).</span><br><span class="line">150 Opening BINARY mode data connection for secret.txt (23 bytes).</span><br><span class="line">226 Transfer complete.</span><br><span class="line">23 bytes received in 0.00107 secs (21.48 Kbytes/sec)</span><br><span class="line"><span class="meta prompt_">ftp&gt; </span><span class="language-bash"><span class="built_in">exit</span></span></span><br><span class="line">221 Goodbye.</span><br></pre></td></tr></table></figure></div>

<p>我们注意到上述FTP服务器中一共有六个文件：三个 txt 文件、两个 epub 文件和一个 sh 文件。txt和epub扩展名分别用于文本文件和电子书文件，而 sh 扩展名则表示该文件是一个 shell 脚本，shell 脚本通常会包含一组需要重复执行的命令。</p>
<p>在我们使用 FTP 命令 <code>get secret.txt</code>下载文件secret.txt 并使用<code>exit</code>退出 FTP 客户端之后，我们就会返回到攻击机的终端界面；此时我们可以在攻击机的终端界面中使用<code>cat secret.txt</code>命令来显示 secret.txt 文件的文本内容。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">root@AttackBox# </span><span class="language-bash"><span class="built_in">cat</span> secret.txt</span> </span><br><span class="line">password: [redacted]   #实际上这行会显示密码信息，此处的redacted表示隐藏（相当于马赛克）的意思</span><br></pre></td></tr></table></figure></div>

<p>我们得到了一个无意中复制到公共 FTP 服务器上的账户密码明文，让我们试试看它是否适用于 root 帐户（root账户在Linux系统上拥有完全的权限，可以读写任何文件，能够安装和删除任何程序）。在攻击机终端界面，我们可以输入 <code>ssh root@MACHINE_IP</code>来进行ssh登录，随后我们将被要求输入root账号的密码以进行身份验证，我们直接尝试输入我们在 FTP 服务器上发现的密码明文即可。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">root@AttackBox# </span><span class="language-bash">ssh root@MACHINE_IP</span></span><br><span class="line">root@MACHINE_IP&#x27;s password: </span><br><span class="line">Welcome to Ubuntu 20.04.4 LTS (GNU/Linux 5.4.0-107-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https://help.ubuntu.com</span><br><span class="line"> * Management:     https://landscape.canonical.com</span><br><span class="line"> * Support:        https://ubuntu.com/advantage</span><br><span class="line"></span><br><span class="line">  System information as of Thu  7 Apr 08:16:42 UTC 2022</span><br><span class="line"></span><br><span class="line">  System load:  0.15              Processes:              225</span><br><span class="line">  Usage of /:   64.6% of 6.53GB   Users logged in:        0</span><br><span class="line">  Memory usage: 19%               IPv4 address for ens33: MACHINE_IP</span><br><span class="line">  Swap usage:   0%</span><br><span class="line"></span><br><span class="line"> * Super-optimized for small spaces - read how we shrank the memory</span><br><span class="line">   footprint of MicroK8s to make it the smallest full K8s around.</span><br><span class="line"></span><br><span class="line">   https://ubuntu.com/blog/microk8s-memory-optimisation</span><br><span class="line"></span><br><span class="line">0 updates can be applied immediately.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Last login: Thu Apr  7 07:53:28 2022 from 10.10.10.1</span><br></pre></td></tr></table></figure></div>

<p>以 root 身份完成ssh登录后，我们就可以完全控制目标服务器了，为了查找目标文件 我们可以使用以下 Linux 命令：</p>
<ol>
<li>使用<code>pwd</code>命令，pwd是print working directory 的缩写，此命令可用来查看我们在系统中的当前位置。</li>
<li>使用<code>ls</code>命令来列出文件信息，查看文件列表中有无目标文件。</li>
<li>使用<code>cat flag.txt</code>命令来查看文件内容。</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">root@AttackBox# </span><span class="language-bash"><span class="built_in">pwd</span></span></span><br><span class="line">/root</span><br><span class="line"><span class="meta prompt_">root@AttackBox# </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line">flag.txt  snap</span><br><span class="line"><span class="meta prompt_">root@AttackBox# </span><span class="language-bash"><span class="built_in">cat</span> flag.txt</span> </span><br><span class="line">[redacted]</span><br></pre></td></tr></table></figure></div>

<p>因为我们以 root 身份完成了登录，所以我们可以完全访问所有文件，包括其他用户的文件，我们可以执行以下 Linux 命令进行探索：</p>
<ol>
<li><p>使用<code>cd /home</code> 命令转到包含所有用户主目录的目录吗，cd 是 change directory（更改目录）的缩写。</p>
</li>
<li><p>我们在&#x2F;home目录中运行<code>ls</code>命令，查看系统的所有用户名称，因为我们拥有系统管理员（root）权限，所以我们可以直接检查其他用户的主文件夹下的内容。</p>
</li>
<li><p>使用<code>cd librarian</code>命令进入用户librarian的目录。</p>
</li>
<li><p>使用 <code>pwd</code> 命令以查看我们在系统中的当前位置（ &#x2F;home&#x2F;librarian）。</p>
</li>
<li><p>使用<code>ls</code>命令显示 librarian 目录下的文件信息，查看文件列表中有无目标文件。</p>
</li>
<li><p>我们可以使用<code>cat flag.txt</code>命令打印文本文件内容到终端界面。</p>
</li>
</ol>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">root@AttackBox# </span><span class="language-bash"><span class="built_in">cd</span> /home</span></span><br><span class="line"><span class="meta prompt_">root@AttackBox# </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line">ftpsecure  librarian  strategos</span><br><span class="line"><span class="meta prompt_">root@AttackBox# </span><span class="language-bash"><span class="built_in">cd</span> librarian/</span></span><br><span class="line"><span class="meta prompt_">root@AttackBox# </span><span class="language-bash"><span class="built_in">pwd</span></span></span><br><span class="line">/home/librarian</span><br><span class="line"><span class="meta prompt_">root@AttackBox# </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line">flag.txt</span><br><span class="line"><span class="meta prompt_">root@AttackBox# </span><span class="language-bash"><span class="built_in">cat</span> flag.txt</span> </span><br><span class="line">[redacted]</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/a708c20aa1243c8e2be30bb9e74bd663.png"
                      alt="img"
                ></p>
<p>让我们总结一下我们在本小节中的工作，我们的目标是获取 IP 地址为MACHINE_IP的目标系统的root访问权限：</p>
<ol>
<li>我们使用 nmap 来了解目标机器正在运行的服务。</li>
<li>我们连接到目标机的 FTP 服务器以了解有关其配置的更多信息。</li>
<li>我们发现一个包含root密码的文件被错误地复制到了FTP服务器中的公共文件夹下。</li>
<li>我们使用找到的密码，以root用户身份来进行ssh登录。</li>
<li>最终，我们获得了所有用户文件的访问权限（因为此时的用户身份为root）。</li>
</ol>
<h3 id="答题-2"><a href="#答题-2" class="headerlink" title="答题"></a><strong>答题</strong></h3><p><em>在本文相关的Tryhackme实验房间页面 部署虚拟实验环境，并完成本小节对应的实例。</em></p>
<p><em><strong>问题</strong></em></p>
<ol>
<li>secret.txt文件内容中的密码是什么？</li>
<li>&#x2F;root目录中的flag.txt文件内容是什么？</li>
<li>&#x2F;home&#x2F;librarian目录中的flag.txt文件内容是什么？</li>
</ol>
<p><em><strong>操作</strong></em></p>
<p>使用nmap进行端口扫描：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">nmap -sV -sC -T4 10.10.98.42</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230322221312517.png"
                      alt="image-20230322221312517"
                ></p>
<blockquote>
<p>目标机器上存在FTP服务且允许进行匿名登录</p>
</blockquote>
<p>针对目标机的ftp服务进行匿名登录尝试：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">ftp 10.10.98.42</span><br><span class="line">anonymous</span><br><span class="line">ls</span><br><span class="line">get secret.txt </span><br><span class="line">exit</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230322221546534.png"
                      alt="image-20230322221546534"
                ></p>
<p>下载完敏感文件后，在攻击机终端查看到该文件内容为root用户的密码明文，所以我们基于已知密码 直接尝试以root用户身份进行ssh登录：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cat secret.txt #password: ABC789xyz123</span><br><span class="line"></span><br><span class="line">ssh root@10.10.98.42</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230322221617429.png"
                      alt="image-20230322221617429"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230322221757084.png"
                      alt="image-20230322221757084"
                ></p>
<blockquote>
<p>secret.txt文件内容中的密码是：ABC789xyz123 。</p>
</blockquote>
<p>成功完成ssh登录成功后，我们获得了root权限，接下来我们将查找目标系统上的目标文本文件并查看相关的文本内容：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cd /root</span><br><span class="line">ls</span><br><span class="line">cat flag.txt</span><br><span class="line"></span><br><span class="line">cd /home</span><br><span class="line">ls</span><br><span class="line">cd /home/librarian/</span><br><span class="line">ls</span><br><span class="line">cat flag.txt</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230322222032954.png"
                      alt="image-20230322222032954"
                ></p>
<blockquote>
<p>&#x2F;root目录中的flag.txt文件内容是：THM{FTP_SERVER_OWNED} 。</p>
<p>&#x2F;home&#x2F;librarian目录中的flag.txt文件内容是：THM{LIBRARIAN_ACCOUNT_COMPROMISED} 。</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230320215901969.png"
                      alt="image-20230320215901969"
                ></p>
]]></content>
      <tags>
        <tag>TryHackMe</tag>
        <tag>网络安全基础</tag>
      </tags>
  </entry>
  <entry>
    <title>THM-Intro to Digital Forensics(数字取证介绍)-学习</title>
    <url>/2024/01/16/THM-Intro%20to%20Digital%20Forensics(%E6%95%B0%E5%AD%97%E5%8F%96%E8%AF%81%E4%BB%8B%E7%BB%8D)-%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>本文相关的TryHackMe实验房间链接：<a class="link"   href="https://tryhackme.com/room/introdigitalforensics" >https://tryhackme.com/room/introdigitalforensics <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<p>本文相关内容：了解数字取证及其相关流程，并完成相关的简单实例。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>取证是指应用科学技术来调查犯罪情况和确定事实。随着计算机和智能手机等数字系统的使用和普及，为了调查和数字系统相关的犯罪情况，一个新的取证学分支得以诞生：计算机取证——后来逐渐演变为数字取证。</p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230322232751118.png"
                      alt="image-20230322232751118"
                ></p>
<p>考虑以下场景——执法人员到达了犯罪现场，然而，这个犯罪现场的一部分包括了数字设备和数字媒体；数字设备包括台式电脑、笔记本电脑、数码相机、音乐播放器和智能手机等，而数字媒体则包括 CD、DVD、USB 闪存驱动器和外部存储设备。这就引出了以下几个问题：</p>
<ul>
<li>警方应如何收集智能手机和笔记本电脑等设备中的数字证据？ 如果计算机和智能手机正在运行，应遵循哪些工作程序进行处理？</li>
<li>如何传输数字证据？例如，在移动计算机时是否有某些最佳实践方案可以遵循？</li>
<li>如何分析收集到的数字证据？个人设备的数据存储量可能在数十 GB 到数 TB 之间，应该如何进行分析？</li>
</ul>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230322232730081.png"
                      alt="image-20230322232730081"
                ></p>
<p>假设嫌疑人拥有如上图所示的可疑数字设备和可疑数字媒体，我们可以进行快速查看并调查一些可能存有关键证据的数字设备、媒体；除了台式电脑之外，我们还注意到嫌疑人桌面上有平板电脑、智能手机、数码相机和 USB 闪存驱动器，这些设备及媒体中的任何一个都可能包含有助于案件调查的大量信息，执法者为了将这些设备作为证据进行处理 就需要用到数字取证技术。</p>
<p>更正式地说，数字取证就是应用计算机科学为达到法律目的而对数字证据展开调查。数字取证可用于进行以下两种类型的调查：</p>
<ol>
<li>公共部门调查，是指由政府和执法机构开展的调查，他们将参与犯罪调查或者民事调查。</li>
<li>私营部门调查，是指公司机构通过指派私人调查员进行的调查，无论是内部调查还是外包调查，它们都是由违反公司政策的行为而引发的调查。</li>
</ol>
<p>无论是调查犯罪行为还是调查违反公司政策的行为，部分证据都可能会与数字设备和数字媒体有关，这就是数字取证技术发挥作用并试图确定到底发生了什么的地方，没有训练有素的数字取证调查员的辛勤工作，就不可能正确地处理任何数字证据。</p>
<p><strong>答题</strong></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230322232853397.png"
                      alt="image-20230322232853397"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230320220915406.png"
                      alt="image-20230320220915406"
                ></p>
<h2 id="数字取证流程"><a href="#数字取证流程" class="headerlink" title="数字取证流程"></a>数字取证流程</h2><p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230322234317128.png"
                      alt="image-20230322234317128"
                ></p>
<p>假如你是一名数字取证调查员，你可能会看到与上图所示场景相类似的现场情况，为了扮演好数字取证调查员的角色，你接下来应该做什么？在获得适当的合法授权后，进行数字取证的基本计划如下：</p>
<ol>
<li><p>获取证据：收集可疑的笔记本电脑、存储设备、数码相机等数字设备。（注意：当笔记本电脑和计算机在打开状态时 需要进行特殊处理，但本文在此不做深入介绍）</p>
</li>
<li><p>建立监管链(Establish a chain of custody)：适当填写相关表格（可基于<a class="link"   href="https://www.nist.gov/document/sample-chain-custody-formdocx" >表格样本 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>），这一步的目的是要确保只有经过授权的调查人员才能访问数字证据，以保证没有其他人可以篡改证据。</p>
</li>
<li><p>将证据放在安全的容器中：你要确保数字证据不被损坏，对于智能手机而言，你需要确保它们无法访问网络，以免被其他人远程擦除数据。</p>
</li>
<li><p>将证据传送到你的数字取证实验室。</p>
</li>
</ol>
<p>在数字取证实验室中，相关的操作过程如下：</p>
<ol>
<li><p>从安全容器中检索数字证据。</p>
</li>
<li><p>创建证据的取证副本：取证副本需要使用高级软件进行创建 以避免修改原始数据。</p>
</li>
<li><p>将数字证据返回到安全容器：之后你将处理取证副本，如果你不小心损坏了取证副本，你可以随时再创建一个新副本。</p>
</li>
<li><p>在取证工作站上处理取证副本。</p>
</li>
</ol>
<p>以上步骤改编自<a class="link"   href="https://www.cengageasia.com/TitleDetails/isbn/9781337568944" >《计算机取证和调查指南》第 6 版 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a>。</p>
<p>简而言之，进行数字取证时要注意以下几点：</p>
<ul>
<li><p>适当的搜查权限：调查人员不能在没有适当的法律权限的情况下 开始进行数字取证操作。</p>
</li>
<li><p>监管链：这对于随时跟踪谁在持有数字证据是必要的。</p>
</li>
<li><p>数学验证：通过使用一种特殊的数学函数，该函数称为散列（hash-哈希）函数，我们可以确认原数字文件未被修改。</p>
</li>
<li><p>使用经过验证的工具：应对数字取证中使用的工具进行验证，以确保它们能够正常工作；例如，如果你正在创建磁盘映像，你希望能够确保 最终得到的取证映像与磁盘上的原数据相同。</p>
</li>
<li><p>可重复性：只要具备适当的技能和工具，就可以复制数字取证的结果。</p>
</li>
<li><p>报告：数字取证调查以一份报告结束，该报告将显示与所发现案件相关的证据。</p>
</li>
</ul>
<p><strong>答题</strong></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230322235500854.png"
                      alt="image-20230322235500854"
                ></p>
<h2 id="数字取证的简单实例"><a href="#数字取证的简单实例" class="headerlink" title="数字取证的简单实例"></a>数字取证的简单实例</h2><p>我们在数字设备上所做的一切，从智能手机到电脑，都会留下痕迹，让我们看看我们如何在后续调查中使用它。</p>
<p>本小节实例场景介绍：我们的猫Gado被绑架了，绑架者向我们发送了一份包含他们要求的 MS Word 文档格式的文档；为了方便起见，我们已将相关文档转换为了 PDF 格式并从 MS Word 文件中提取出了图像；我们接下来要对 目标pdf文件 以及 目标jpg文件 进行简单的数字取证分析。</p>
<p>你可以通过使用TryHackMe中和本文相关的实验房间页面–下载附件到你的本地机器上进行检查；或者直接打开 在对应实验房间页面所部署的 AttackBox 上的终端，然后转到目录 &#x2F;root&#x2F;Rooms&#x2F;introdigitalforensics 进行文件检查。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用TryHackMe所提供的AttackBox上的终端</span></span><br><span class="line"><span class="meta prompt_">root# </span><span class="language-bash"><span class="built_in">cd</span> /root/Rooms</span></span><br><span class="line"><span class="meta prompt_">root# </span><span class="language-bash"><span class="built_in">cd</span> introdigitalforensics</span></span><br><span class="line"><span class="meta prompt_">root# </span><span class="language-bash"><span class="built_in">ls</span></span></span><br><span class="line">letter-image.jpg  ransom-letter.doc  ransom-letter.pdf  ransom-lettter-2.zip</span><br></pre></td></tr></table></figure></div>

<p><strong>文档元数据</strong></p>
<p>当你创建简单的文本文件 TXT 时，操作系统会自动保存一些元数据，例如文件创建日期和上次修改日期；而当你使用更高级的编辑器（例如 MS Word）进行文件创建时，会有更多的信息被保留在文件的元数据中。 有多种读取文件元数据的方法，你可以使用一些官方查看器&#x2F;编辑器打开文件读取元数据 或者 选择使用合适的取证工具对文件进行元数据读取，请注意，如果你将原始文件导出为其他格式如 PDF 格式，则将保留原始文档的大部分元数据，这具体取决于你所使用的 PDF 编辑器。</p>
<p> 如果我们要从PDF 文件中获取信息，我们可以尝试使用 <em><strong>pdfinfo</strong></em>工具 来读取pdf文件的元数据。使用 <em><strong>pdfinfo</strong></em> 会显示与 PDF 文件相关的各种元数据，例如标题、主题、作者、创建者和创建日期。 （如果你使用的是 Kali Linux 并且没有安装 <em><strong>pdfinfo</strong></em>，则可用 <code>sudo apt install poppler-utils</code> 命令来进行安装）</p>
<p>以下为使用<code>pdfinfo DOCUMENT.pdf</code>命令的示例。</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">user@TryHackMe$ </span><span class="language-bash">pdfinfo DOCUMENT.pdf</span> </span><br><span class="line">Creator:        Microsoft® Word for Office 365</span><br><span class="line">Producer:       Microsoft® Word for Office 365</span><br><span class="line">CreationDate:   Wed Oct 10 21:47:53 2018 EEST</span><br><span class="line">ModDate:        Wed Oct 10 21:47:53 2018 EEST</span><br><span class="line">Tagged:         yes</span><br><span class="line">UserProperties: no</span><br><span class="line">Suspects:       no</span><br><span class="line">Form:           none</span><br><span class="line">JavaScript:     no</span><br><span class="line">Pages:          20</span><br><span class="line">Encrypted:      no</span><br><span class="line">Page size:      595.32 x 841.92 pts (A4)</span><br><span class="line">Page rot:       0</span><br><span class="line">File size:      560362 bytes</span><br><span class="line">Optimized:      no</span><br><span class="line">PDF version:    1.7</span><br></pre></td></tr></table></figure></div>

<p>以上 PDF 元数据清楚地表明它是在 2018 年 10 月 10 日使用 MS Word for Office 365 创建的。</p>
<p><strong>答题</strong></p>
<p><em>问题：使用 pdfinfo，找出和本实验房间页面所提供的pdf附件相关的作者信息。(我们使用和本文相关的 TryHackMe实验房间页面 所提供的 AttackBox 进行分析)</em></p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">cd /root/Rooms</span><br><span class="line">cd introdigitalforensics</span><br><span class="line">ls</span><br><span class="line">pdfinfo ransom-letter.pdf</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230323180941729.png"
                      alt="image-20230323180941729"
                ></p>
<blockquote>
<p>目标pdf文件作者是：Ann Gree Shepherd</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230323172932309.png"
                      alt="image-20230323172932309"
                ></p>
<p><strong>照片 EXIF 数据</strong></p>
<p>EXIF 代表 可交换图像文件格式(Exchangeable Image File Format)，它是将元数据保存到图像文件的标准。每当你使用智能手机或数码相机拍照时，图像中都会嵌入大量信息，以下是可以在原始数字图像中找到的元数据示例：</p>
<ul>
<li>相机型号&#x2F;智能手机型号</li>
<li>拍摄图像的日期和时间</li>
<li>照片设置，例如焦距、光圈、快门速度和 ISO 设置等</li>
</ul>
<p>由于智能手机可能配备了 GPS 传感器，因此也很有可能通过照片找到嵌入在图像中的 GPS 坐标(GPS 坐标，即纬度和经度)，这通常会暴露出照片的拍摄地点。</p>
<p>有许多在线和离线工具可以从图像中读取 EXIF 数据，比如命令行工具 <code>exiftool</code> ，<code>exiftool</code> 可用于读取和写入各种文件类型（例如 JPEG 图像）中的元数据。 （如果你使用的攻击机是Kali Linux 并且没有安装 <code>exiftool</code>，则可以输入 <code>sudo apt install libimage-exiftool-perl</code> 命令安装<code>exiftool</code>）</p>
<p>只要执行简单的 <code>exiftool IMAGE</code>命令，就能读取嵌入到图像文件中的所有 EXIF 数据：</p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">user@TryHackMe$ </span><span class="language-bash">exiftool IMAGE.jpg</span></span><br><span class="line">[...]</span><br><span class="line">GPS Position : 51 deg 31&#x27; 4.00&quot; N, 0 deg 5&#x27; 48.30&quot; W</span><br><span class="line">[...]</span><br></pre></td></tr></table></figure></div>

<p>如果我们通过在线地图搜索上述得到的坐标位置，则将了解有关照片拍摄位置的更多信息。我们可以在 <a class="link"   href="https://www.bing.com/maps" >Microsoft Bing 地图 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 或者 <a class="link"   href="https://www.google.com/maps" >谷歌地图 <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a> 上搜索 51° 31’ 4.00” N，0° 5’ 48.30” W ，我们会发现这些坐标将表明 目标照片是在一个非常靠近伦敦博物馆的地方拍摄的（我们用 ° 替换 deg，以便我们使用地图搜索），同时，我们还能注意到 以上坐标在搜索页面上会被转换为十进制表示——51.517776,-0.09675 。</p>
<p><strong>答题</strong></p>
<p><em>问题：使用 exiftool 或任何类似工具，尝试找到 和本实验房间页面所提供的图像附件相关的街道名称。(我们使用和本文相关的 TryHackMe实验房间页面 所提供的 AttackBox 进行分析)</em></p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line">exiftool letter-image.jpg | grep GPS</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230323181841107.png"
                      alt="image-20230323181841107"
                ></p>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230323180223367.png"
                      alt="image-20230323180223367"
                ></p>
<blockquote>
<p>从 exiftool 获得的 GPS 坐标是 51 deg 30’ 51.90” N，0 deg 5’ 38.73” W （在使用地图检索时，请用 ° 替换 deg 并在搜索前 删除数字和 ° 符号之间的空格）。</p>
<p>最终我们将使用在线地图搜索以下坐标：51°30’51.9”N 0°05’38.7”W</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230323175531086.png"
                      alt="image-20230323175531086"
                ></p>
<p><em>问题：继续分析以上图像附件，拍摄目标照片所用的相机型号名称是什么？(我们使用和本文相关的 TryHackMe实验房间页面 所提供的 AttackBox 进行分析)</em></p>
<div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">要仅显示带有单词“Camera”的行，可以使用 exiftool PHOTO.jpg | grep Camera 命令</span></span><br><span class="line">exiftool letter-image.jpg | grep Camera</span><br></pre></td></tr></table></figure></div>

<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230323182006160.png"
                      alt="image-20230323182006160"
                ></p>
<blockquote>
<p>拍摄目标照片所用的相机型号名称为：Canon EOS R6</p>
</blockquote>
<p><img  
                     lazyload
                     src="/images/loading.svg"
                     data-src="/../articleimg/image-20230323175540323.png"
                      alt="image-20230323175540323"
                ></p>
]]></content>
      <tags>
        <tag>TryHackMe</tag>
        <tag>网络安全基础</tag>
      </tags>
  </entry>
</search>
